name: Frontend Deploy

on:
  workflow_run:
    workflows: ["Frontend CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # VITE_APP_API_URL, VITE_APP_WS_URL, VITE_ONE_SIGNAL_APP_ID는 이미 CI 빌드 과정에서 아티팩트 내에 포함
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Build Artifacts # CI에서 생성된 아티팩트 다운로드
        uses: actions/download-artifact@v4
        with:
          name: frontend-build-output-${{ github.event.workflow_run.head_sha }} # CI에서 업로드한 아티팩트 이름과 동일하게
          path: dist # 다운로드할 경로 (S3 업로드 시 사용할 'dist' 폴더)
          run-id: ${{ github.event.workflow_run.id }} # 이전 workflow_run의 ID를 명시

      - name: Upload to S3 # 다운로드된 'dist' 폴더를 S3에 업로드
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: dist # 다운로드된 아티팩트의 경로

      - name: Invalidate CloudFront cache # CloudFront 캐시 무효화
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
